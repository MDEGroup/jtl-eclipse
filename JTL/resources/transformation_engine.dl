%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
%%%%%%%%%%%%%%%%%%%%%%    TRANSFORMATION ENGINE   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 


%%%%%%%%%%%%%%%%%%%%%%   TRACES GENERATION    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%genero i trace relativi agli elementi non presenti nelle relations%%%%%%%

is_metanode_related(MMS,MCS) :- relation_node(R, MMS, MCS, X), relation_node(R, mmt, MCT, Y), 
								%not relation_direction(R,mmt,MMS), 
								MMS!=mmt.
is_metanode_non_bijective_related(MMS,MCS) :- relation_node(R, MMS, MCS, X), relation_node(R, mmt, MCT, Y), 
											  relation_node(R2, MMS, MCS2, Z), relation_node(R2, mmt, MCT, W), 
											  MCS!=MCS2, R!=R2, MMS!=mmt.

trace_nodex(MMS,IDx,ID,MCS) :- node(MMS,IDx,ID,MCS), not is_metanode_related(MMS,MCS), MMS!=mmt.
trace_nodex(MMS,IDx,ID,MCS) :- node(MMS,IDx,ID,MCS), relation_node(R, MMS, MCS, X), relation_node(R, mmt, MCT, Y), not nodex(mmt,IDx,ID,MCT), MMS!=mmt.

trace_nb_nodex(MMS,IDx,ID,MCS) :- node(MMS,IDx,ID,MCS), is_metanode_non_bijective_related(MMS,MCS), MMS!=mmt.
%-------------------------------------------------------------------------------%

is_metaedge_related(MMS,NameS,NodeSourceS,NodeTargetS) :- relation_edge(R,MMS,NameS,NodeSourceS,NodeTargetS,X), relation_edge(R,mmt,NameT,NodeSourceT,NodeTargetT,Y), 
													   % not relation_direction(R,mmt,MMS), 
													   MMS!=mmt.
is_metaedge_non_bijective_related(MMS,NameS,NodeSourceS,NodeTargetS) :-
	relation_edge(R,MMS,NameS,NodeSourceS,NodeTargetS,X), relation_edge(R,mmt,NameT,NodeSourceT,NodeTargetT,Y), 
	relation_edge(R2,MMS,NameS2,NodeSourceS2,NodeTargetS2,Z), relation_edge(R2,mmt,NameT,NodeSourceT,NodeTargetT,W), 
	NameS!=NameS2, R!=R2, MMS!=mmt.
											  						    
is_metaedge_non_bijective_related(MMS,Name1,NodeSourceS,NodeTargetS) :-
	mapping_edge(mmt,IDe1,IDex1,Name,IDs1,IDsx1,IDt1,IDtx1), edge(MMS,IDe1,IDex1,Name1,IDs11,IDsx11,IDt1,IDtx1),
	mapping_edge(mmt,IDe2,IDex2,Name,IDs2,IDsx2,IDt2,IDtx2), edge(MMS,IDe2,IDex2,Name2,IDs22,IDsx22,IDt2,IDtx2),
	node(MMS,IDs11,IDsx11,NodeSourceS), node(MMS,IDt1,IDtx1,NodeTargetS),
	MMS!=mmt,Name1!=Name2.
											  
trace_edgex(MMS,IDx,ID,Name,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget) :- 
        edge(MMS,IDx,ID,Name,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget), not is_metaedge_related(MMS,Name,NodeSource,NodeTarget),
        node(MMS,IDNodeSourcex,IDNodeSource,NodeSource),node(MMS,IDNodeTargetx,IDNodeTarget,NodeTarget),MMS!=mmt.
trace_edgex(MMS,IDx,ID,Name,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget) :- 
		edge(MMS,IDx,ID,Name,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget),
		relation_edge(R,MMS,NameS,NodeSourceS,NodeTargetS,X),
		relation_edge(R,mmt,NameT,NodeSourceT,NodeTargetT,Y),
		not edgex(mmt,IDx,ID,NameT,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget). 
trace_nb_edgex(MMS,IDx,ID,Name,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget) :- 
        edge(MMS,IDx,ID,Name,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget), is_metaedge_non_bijective_related(MMS,Name,NodeSourceS,NodeTargetS),
        node(MMS,IDNodeSourcex,IDNodeSource,NodeSource),node(MMS,IDNodeTargetx,IDNodeTarget,NodeTarget),MMS!=mmt.

%-------------------------------------------------------------------------------%        
is_metaprop_related(MMS,NameS,MCS) :- relation_prop(R,MMS,NameS,MCS,X), relation_prop(R,mmt,NameT,MCT,Y), 
									 %not relation_direction(R,mmt,MMS), 
									 MMS!=mmt.
is_metaprop_non_bijective_related(MMS,NameS,MCS) :- relation_prop(R,MMS,NameS,MCS,X), relation_prop(R,mmt,NameT,MCT,Y), 
									  relation_prop(R2,MMS,NameS2,MCS2,Z), relation_prop(R2,mmt,NameT,MCT,W), 
									  NameS!=NameS2, R!=R2, MMS!=mmt.

trace_propx(MMS,IDx,ID,IDmcx,IDmc,Name,Value) :- prop(MMS,IDx,ID,IDmcx,IDmc,Name,Value), not is_metaprop_related(MMS,Name,MCS),
node(MMS,IDmcx,IDmc,MCS),MMS!=mmt.
trace_nb_propx(MMS,IDx,ID,IDmcx,IDmc,Name,Value) :- prop(MMS,IDx,ID,IDmcx,IDmc,Name,Value), is_metaprop_non_bijective_related(MMS,Name,MCS),
node(MMS,IDmcx,IDmc,MCS),MMS!=mmt.

trace_propx(MMS,IDx,ID,IDmcx,IDmc,Name,Value) :- prop(MMS,IDx,ID,IDmcx,IDmc,Name,Value), trace_nodex(MMS,IDmcx,IDmc,MCS),MMS!=mmt.
trace_nb_propx(MMS,IDx,ID,IDmcx,IDmc,Name,Value) :- prop(MMS,IDx,ID,IDmcx,IDmc,Name,Value), trace_nb_nodex(MMS,IDmcx,IDmc,MCS),MMS!=mmt.

%:- node(MMT,IDx,ID,Node1), nodex(MMT,IDx,ID,Node2), metanode(MMT,Node2),  Node1!=Node2, MMT=mmt.

%%%%%%%%genero i trace links%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

trace_linkx(MMS,ID,IDx,Node,R) :-
    relation_node(R,MMS,Node,X), relation_node(R,mmt,Node2,Y),
    node(MMS,ID,IDx,Node), nodex(mmt,ID,IDx,Node2),
    MMS!=mmt.
trace_linkx(mmt,ID,IDx,Node2,R) :-
    relation_node(R,MMS,Node,X), relation_node(R,mmt,Node2,Y),
    node(MMS,ID,IDx,Node), nodex(mmt,ID,IDx,Node2),
    MMS!=mmt.
trace_linkx(MMS,ID,IDx,Prop,R) :-
    relation_prop(R,MMS,Prop,Node,X), relation_prop(R,mmt,Prop2,Node2,Y),
    prop(MMS,ID,IDx,IDp,IDpx,Prop,Value), node(MMS,IDp,IDpx,Node),
    propx(mmt,ID,IDx,IDp,IDpx,Prop2,Value), nodex(mmt,IDp,IDpx,Node2),
    MMS!=mmt.
trace_linkx(mmt,ID,IDx,Prop2,R) :-
    relation_prop(R,MMS,Prop,Node,X), relation_prop(R,mmt,Prop2,Node2,Y),
    prop(MMS,ID,IDx,IDp,IDpx,Prop,Value), node(MMS,IDp,IDpx,Node),
    propx(mmt,ID,IDx,IDp,IDpx,Prop2,Value), nodex(mmt,IDp,IDpx,Node2),
    MMS!=mmt.
trace_linkx(MMS,ID,IDx,Edge,R) :-
    relation_edge(R,MMS,Edge,NodeSource,NodeTarget,X), relation_edge(R,mmt,Edge2,NodeSource2,NodeTarget2,Y),
    edge(MMS,ID,IDx,Edge,IDS,IDSx,IDT,IDTx), node(MMS,IDS,IDSx,NodeSource), node(MMS,IDT,IDTx,NodeTarget),
    edgex(mmt,ID,IDx,Edge2,IDS,IDSx,IDT,IDTx), nodex(mmt,IDS,IDSx,NodeSource2), nodex(mmt,IDT,IDTx,NodeTarget2),
    MMS!=mmt.
trace_linkx(mmt,ID,IDx,Edge2,R) :-
    relation_edge(R,MMS,Edge,NodeSource,NodeTarget,X), relation_edge(R,mmt,Edge2,NodeSource2,NodeTarget2,Y),
    edge(MMS,ID,IDx,Edge,IDS,IDSx,IDT,IDTx), node(MMS,IDS,IDSx,NodeSource), node(MMS,IDT,IDTx,NodeTarget),
    edgex(mmt,ID,IDx,Edge2,IDS,IDSx,IDT,IDTx), nodex(mmt,IDS,IDSx,NodeSource2), nodex(mmt,IDT,IDTx,NodeTarget2),
    MMS!=mmt.

%traces generated from mapping_edge are missing

%%%%%%%%%%% Metamodel Target Conformance Check %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

is_target_metamodel_conform(MM,Node) :- metanode(MM,Node).
is_target_metamodel_conform(MM,Prop) :- metaprop(MM,Prop,Node).
is_target_metamodel_conform(MM,Edge) :- metaedge(MM,MetaEdge,Edge,NodeSource,NodeTarget).

%%%%%%%%%% Relations Check %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

is_related(MM,Node) :- relation_node(R,MM,Node,X), relation_node(R,MM2,Node2,Y).
is_related(MM,Prop) :- relation_prop(R,MM,Prop,Node,X), relation_prop(R,MM2,Prop2,Node2,Y).
is_related(MM,Edge) :- relation_edge(R,MM,Edge,NodeSource,NodeTarget,X), relation_edge(R,MM2,Edge2,NodeSource2,NodeTarget2,Y).
is_related(MM,Edge) :- relation_edge(R,MM,Edge,NodeSource,NodeTarget,X), relation_node(R,MM2,Node2,Y).

%%%%%%%%%% Mapping Rules %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%node from node
%mapping_node(MM,ID,IDx,Node) :- relation_node(R,MM,Node,X), relation_node(R,MM2,Node2,Y),node(MM2,ID,IDx,Node2), MM!=MM2.
mapping_node(MM,IDX,IDx, Node) :- relation_node(R,MM,Node,X), relation_node(R,MM2,Node2,Y),node(MM2,ID,IDx,Node2), IDX=ID+X, MM!=MM2.

%prop from prop        
mapping_prop(MM,ID,IDx,IDXmc,IDmcx,Prop,Value) :-
              relation_prop(R,MM,Prop,Node,X), relation_prop(R,MM2,Prop2,Node2,Y),
              prop(MM2,ID,IDx,IDmc,IDmcx,Prop2,Value), node(MM2,IDmc,IDmcx,Node2), nodex(MM,IDmc,IDmcx,Node),
              IDXmc=IDmc+X, MM!=MM2.
%mapping_prop(MM,ID,IDmc,Prop,Value) :- relation_prop(R,MM,Prop,Node,X), relation_prop(R,MM2,Prop2,Node2,X),
%              prop(MM2,ID,IDmc2,Prop2,Value2), setting_prop(R,ID,IDmc,Value), MM!=MM2.
       
%edge from edge         
%mapping_edge(MM,IDX,IDx,Edge,IDS,IDSx,IDT,IDTx) :- 
%                        relation_edge(R,MM,Edge,NodeSource,NodeTarget,X),relation_edge(R,MM2,Edge2,NodeSource2,NodeTarget2,Y), 
%            edge(MM2,ID,IDx,Edge2,IDS,IDSx,IDT,IDTx), IDX=ID+X, MM!=MM2.

%mapping_edge(MM,IDX,IDx,Edge,IDS,IDSx,IDTZ,IDTx) :- 
%                        relation_edge(R,MM,Edge,NodeSource,NodeTarget,X),relation_edge(R,MM2,Edge2,NodeSource2,NodeTarget2,Y), 
%            edge(MM2,ID,IDx,Edge2,IDS,IDSx,IDT,IDTx), 
%            relation_node(R1,MM,Node,Z), relation_node(R1,MM2,Node2,W),node(MM2,IDT,IDTx,Node2),
%            IDX=ID+X, IDTZ=IDT+Z, MM!=MM2.

mapping_edge(MM,IDX,IDx,Edge,IDSZ,IDSx,IDTZ,IDTx) :- 
            relation_edge(R,MM,Edge,NodeSource,NodeTarget,X),relation_edge(R,MM2,Edge2,NodeSource2,NodeTarget2,Y), 
            edge(MM2,ID,IDx,Edge2,IDS,IDSx,IDT,IDTx), 
            nodex(MM,IDS,IDSx,NodeSource), nodex(MM,IDT,IDTx,NodeTarget),
            relation_node(R1,MM,_,Z), relation_node(R1,MM2,NodeTarget2,W), node(MM2,IDT,IDTx,NodeTarget2),
            relation_node(R2,MM,_,Z2), relation_node(R2,MM2,NodeSource2,W2), node(MM2,IDS,IDSx,NodeSource2),
            IDX=ID+X, IDTZ=IDT+Z, IDSZ=IDS+Z2, MM!=MM2.

% edge from node
mapping_edge(MM,ID,IDx,Edge,ID,IDx,IDT,IDTx) :-
	relation_edge(R,MM,Edge,NodeSource,NodeTarget,X),relation_node(R,MM2,Node2,Y),
	relation_node(R2,MM,NodeSource,Z), relation_node(R2,MM2,Node2,W),
    node(MM2,ID,IDx,Node2), nodex(MM,ID,IDx,NodeSource),
    nodex(MM,IDT,IDTx,NodeTarget),
    MM!=MM2.	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%% Generability Check %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                                                                                                
is_generable_node(MM,ID,IDx,Node) v -is_generable_node(MM,ID,IDx,Node) :- mapping_node(MM,ID,IDx,Node), %is_related(MM,Node), 
                                                                                                                is_target_metamodel_conform(MM,Node), MM=mmt.
%:- -is_generable_node(MM,ID,IDx,Node).

is_generable_prop(MM,ID,IDx,Prop,Value) v -is_generable_prop(MM,ID,IDx,Prop,Value) :- mapping_prop(MM,ID,IDx,IDmc,IDmcx,Prop,Value), %is_related(MM,Prop), 
                                                                                                               is_target_metamodel_conform(MM,Prop), MM=mmt.
%:--is_generable_prop(MM,ID,Prop,Value).
                                                                        
is_generable_edge(MM,ID,IDx,Edge,IDS,IDSx,IDT,IDTx) v -is_generable_edge(MM,ID,IDx,Edge,IDS,IDSx,IDT,IDTx) :- mapping_edge(MM,ID,IDx,Edge,IDS,IDSx,IDT,IDTx), 
                                                                                                                %is_related(MM,Edge), 
                                                                                                                is_target_metamodel_conform(MM,Edge),MM=mmt.
%:- -is_generable_edge(MM,ID,IDx,Edge,IDS,IDSx,IDT,IDTx).                                                                                                               
                                                                                                                
                        
%%%%%%%%% Element Generation by Transformation Rule %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

nodex(MM,ID,IDx,Node) :- is_generable_node(MM,ID,IDx,Node), mapping_node(MM,ID,IDx,Node),MM=mmt.


propx(MM,ID,IDx,IDmc,IDmcx,Prop,Value) :- is_generable_prop(MM,ID,IDx,Prop,Value), mapping_prop(MM,ID,IDx,IDmc,IDmcx,Prop,Value), MM=mmt.

edgex(MM,ID,IDx,Edge,IDS,IDSx,IDT,IDTx) :- is_generable_edge(MM,ID,IDx,Edge,IDS,IDSx,IDT,IDTx), mapping_edge(MM,ID,IDx,Edge,IDS,IDSx,IDT,IDTx), MM=mmt. 
    
:- nodex(MM,ID,IDx,Node), nodex(MM,ID,IDx,Node2), is_a_non_bijective_relation(Node,Node2), Node2!=Node.
is_a_non_bijective_relation(N1,N2):- relation_node(R, MMS, N1, X), relation_node(R, mmt, N2, Y), 
									relation_node(R2, MMS, N1, Z), relation_node(R2, mmt, N3, W), 
								    N2!=N3, R!=R2, MMS!=mmt.
is_a_non_bijective_relation_with(N1,N2,N3):- relation_node(R, MMS, N1, X), relation_node(R, mmt, N2, Y), 
									relation_node(R2, MMS, N1, Z), relation_node(R2, mmt, N3, W), 
								    N2!=N3, R!=R2, MMS!=mmt.								    

:- not nodex(mmt,ID,IDx,Node), not nodex(mmt,ID,IDx,Node2), is_a_non_bijective_relation(Node,Node2), node(MMS,ID,IDx,Node3), is_a_non_bijective_relation_with(Node,Node2,Node3), Node2!=Node, MMS!=mmt.							    

:- edgex(mmt, IDe, IDex, Edge, IDs, IDsx, IDt1, IDtx1), 
   edgex(mmt, IDe, IDex, Edge, IDs, IDsx, IDt2, IDtx2), IDt1!=IDt2.
:- mapping_edge(mmt, IDe, IDex, Edge, IDS, IDSx, IDT, IDTx),  
not edgex_mapped(mmt, IDe, IDex).
edgex_mapped(mmt, IDe, IDex) :- edgex(mmt, IDe, IDex, Edge, IDS, IDSx, IDT, IDTx).

%%%%%%%%% Element Generation by Traces %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
              
              
mapping_node(MM,IDx,ID,Node):- trace_node(MM,IDx,ID,Node),MM=mmt.
%:- nodex(MM,IDx,ID,Node2), trace_node(MM,IDx,ID,Node), Node != Node2.
 
mapping_prop(MM,IDx,ID,IDmcx,IDmc,Prop,Value):- trace_prop(MM,IDx,ID,IDmcx,IDmc,Prop,Value),
                                         % prop(MM,IDx,ID,IDmcx,IDmc,Prop,Value), 
										%nodex(MM,IDmcx,IDmc,MCS),%node(MM,IDmcx,IDmc,MCS),
                                         MM=mmt.

mapping_edge(MM,IDx,ID,Edge,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget):-  
					trace_edge(MM,IDx,ID,Edge,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget), 
					%edge(MM,IDx,ID,Edge,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget), 
                     %%nodex(MM,IDNodeSourcex,IDNodeSource,NodeSource), nodex(MM,IDNodeTargetx,IDNodeTarget,NodeTarget),
                     %node(MM,IDNodeSourcex,IDNodeSource,NodeSource), node(MM,IDNodeTargetx,IDNodeTarget,NodeTarget), 
                     MM=mmt.    
                     
 :- not nodex(MM,IDx,ID,Node), trace_node(MM,IDx,ID,Node).
 :- not propx(MM,IDx,ID,IDmcx,IDmc,Prop,Value), trace_prop(MM,IDx,ID,IDmcx,IDmc,Prop,Value).
 :- not edgex(MM,IDx,ID,Edge,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget), trace_edge(MM,IDx,ID,Edge,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget).
 
%nodex(MM,IDx,ID,Node) :- trace_nb_node(MM,IDx,ID,Node),MM=mmt.
%propx(MM,IDx,ID,IDmcx,IDmc,Prop,Value) :-  trace_nb_prop(MM,IDx,ID,IDmcx,IDmc,Prop,Value),MM=mmt.
%edgex(MM,IDx,ID,Edge,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget) :- trace_nb_edge(MM,IDx,ID,Edge,IDNodeSourcex,IDNodeSource,IDNodeTargetx,IDNodeTarget), MM=mmt.
 
 :- nodex(MM,IDx,ID,Node2), trace_nb_node(MM,IDx,ID,Node), Node != Node2.
 :- edgex(MM,IDx,ID,Edge2,IDS,IDSx,IDT,IDTx), trace_nb_edge(MMS,IDx,ID,Edge,IDS2,IDS2x,IDT2,IDT2x), Edge!=Edge2.
 %:- not nodex(MM,IDx,ID,Node), trace_nb_node(MM,IDx,ID,Node).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%